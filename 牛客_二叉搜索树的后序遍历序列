输入一个整型数组，判断该数组是不是二叉搜索树的后序遍历结果。
如果是，返回true。否则返回false

二叉搜索树概念get，
后序遍历的最后一个数一定是分水岭，
左右低，右边高



# -*- coding:utf-8 -*-
class Solution:
    def VerifySquenceOfBST(self, sequence):
        # write code here
        # 用递归吧，数组的最后一个为分界线，左边大右边小
        # 这个答案又奇怪了，空树应该也是true啊，怎么又是false
        if len(sequence) == 0:
            return False
        if len(sequence) <= 2:
            return True
        else:
            mid = sequence[-1]
            seq_left = []
            seq_right = []
            for i in range(len(sequence)-1):
                if sequence[i] < mid:
                    continue
                else:
                    seq_left = sequence[:i]
                    i_right = i
                    seq_right = sequence[i_right:-1]
                    break
            for right in seq_right:
                if right < mid:
                    return False
            if len(seq_left) == 0 and len(seq_right) == 0:
                return True
            if len(seq_left) == 0 and len(seq_right) != 0:
                return self.VerifySquenceOfBST(seq_right)
            if len(seq_left) != 0 and len(seq_right) == 0:
                return self.VerifySquenceOfBST(seq_left)
            else:
                return (self.VerifySquenceOfBST(seq_left) and self.VerifySquenceOfBST(seq_right))
